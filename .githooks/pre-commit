#!/bin/bash

# Pre-Commit TDD Enforcement Hook
# This hook enforces the TDD protocol and safety measures

echo "🛡️  TDD PROTOCOL ENFORCEMENT CHECK"
echo "=================================="

# Check if TDD_PROTOCOL.md exists and is being followed
if [ ! -f "docs/development/protocols/tdd-protocol.md" ]; then
    echo "❌ ERROR: docs/development/protocols/tdd-protocol.md missing!"
    echo "This commit violates safety protocols."
    exit 1
fi

# Check for test files related to changes
modified_files=$(git diff --cached --name-only)
has_test_files=false
has_source_changes=false

echo "Files being committed:"
for file in $modified_files; do
    echo "  - $file"
    if [[ $file == *".test."* ]] || [[ $file == *".spec."* ]]; then
        has_test_files=true
    fi
    if [[ $file == *"/src/"* ]] && [[ $file == *".ts" ]] && [[ $file != *".test."* ]] && [[ $file != *".spec."* ]]; then
        has_source_changes=true
    fi
done

# Enforce Test-First Development
if [ "$has_source_changes" = true ] && [ "$has_test_files" = false ]; then
    echo ""
    echo "❌ TDD VIOLATION DETECTED!"
    echo "Source code changes detected without corresponding test changes."
    echo ""
    echo "REQUIRED ACTION:"
    echo "1. Write failing tests first"
    echo "2. Then implement code to make tests pass"
    echo "3. Commit tests and implementation together"
    echo ""
    echo "Commit rejected to prevent breaking changes."
    exit 1
fi

# Check if build passes
echo ""
echo "🔨 Running build check..."
npm run build > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "❌ BUILD FAILED!"
    echo "Fix build errors before committing."
    exit 1
fi

# Check if tests pass
echo "🧪 Running test suite..."
npm test > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "❌ TESTS FAILED!"
    echo "All tests must pass before committing."
    echo "Run 'npm test' to see failing tests."
    exit 1
fi

echo "✅ All safety checks passed!"
echo "✅ TDD protocol compliance verified!"
echo "✅ Build and tests successful!"
echo ""
exit 0
